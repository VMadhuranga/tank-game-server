var e=Object.defineProperty,t=(t,s,a)=>((t,s,a)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[s]=a)(t,"symbol"!=typeof s?s+"":s,a);import{r as s}from"./phaser-UvlxNa5i.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var a=s();const n="new_player",i="other_players",r="move_player",o="player_hit",l="bullet_hit",d="shoot";class h extends a.Scene{constructor(){super("MainGame"),t(this,"socket"),t(this,"players"),t(this,"playerTank"),t(this,"playerID"),t(this,"tankSpeed",3),t(this,"bullets"),t(this,"lastFired",0)}sendEvent(e){this.socket.send(JSON.stringify(e))}sendNewPlayerEvent(){this.sendEvent({type:n,payload:null})}sendOtherPlayersEvent(){this.sendEvent({type:i,payload:null})}sendMovePlayerEvent(e){this.sendEvent({type:r,payload:e})}sendPlayerHitEvent(e){this.sendEvent({type:o,payload:e})}sendBulletHitEvent(e){this.sendEvent({type:l,payload:e})}sendShootEvent(e){this.sendEvent({type:d,payload:e})}setPlayerTank(){var e;this.playerTank=null==(e=this.players.get(this.playerID))?void 0:e.setTexture("playerTank")}addToPlayers(e){this.players.set(e.id,this.physics.add.sprite(e.pX,e.pY,"enemyTank").setAngle(e.angle).setCollideWorldBounds(!0).setName(e.id))}removeFromPlayers(e){var t;null==(t=this.players.get(e.id))||t.destroy(!0),this.players.delete(e.id)}movePlayer(e){var t;null==(t=this.players.get(e.id))||t.setPosition(e.pX,e.pY).setAngle(e.angle)}addToBullets(e,t){this.bullets.set(e.id,this.physics.add.sprite(e.pX,e.pY,t).setAngle(e.angle).setVelocity(e.vX,e.vY).setName(e.id))}removeFromBullets(e){var t;null==(t=this.bullets.get(e.id))||t.destroy(!0),this.bullets.delete(e.id)}exitGamePlay(e){this.playerTank.destroy(),this.playerID="",this.players.clear(),this.bullets.clear(),this.socket.close(),this.scene.start(e)}exitGamePlayOnEscPress(){var e;const t=null==(e=this.input.keyboard)?void 0:e.addKey(Phaser.Input.Keyboard.KeyCodes.ESC);(null==t?void 0:t.isDown)&&this.exitGamePlay("MainMenu")}handleEvents(e){switch(e.type){case n:{const t=e.payload;this.addToPlayers(t),this.playerID||(this.playerID=t.id,this.setPlayerTank(),this.sendOtherPlayersEvent());break}case i:{const t=e.payload;for(const e of t)this.addToPlayers(e);break}case"remove_player":{const t=e.payload;this.removeFromPlayers(t);break}case r:{const t=e.payload;this.movePlayer(t);break}case o:{const t=e.payload;this.removeFromPlayers(t),this.playerID===t.id&&this.exitGamePlay("GameOver");break}case l:{const t=e.payload;this.removeFromBullets(t);break}case d:{const t=e.payload;this.addToBullets(t,"enemyTankBullet");break}}}preload(){this.load.setPath("assets"),this.load.image("playerTank","tank_blue.png"),this.load.image("enemyTank","tank_sand.png"),this.load.image("playerTankBullet","bulletBlue2_outline.png"),this.load.image("enemyTankBullet","bulletSand2_outline.png")}create(){this.players=new Map,this.bullets=new Map,this.socket=new WebSocket(`wss://${document.location.host}/ws`),this.socket.addEventListener("open",(()=>{this.sendNewPlayerEvent()})),this.socket.addEventListener("message",(e=>{const t=JSON.parse(e.data);this.handleEvents(t)}))}update(e){var t,s,a,n,i,r;let o=null==(t=this.input.keyboard)?void 0:t.createCursorKeys();if((null==o?void 0:o.up.isDown)?null==(s=this.playerTank)||s.setPosition(this.playerTank.x,this.playerTank.y-this.tankSpeed).setAngle(-180):(null==o?void 0:o.down.isDown)?null==(a=this.playerTank)||a.setPosition(this.playerTank.x,this.playerTank.y+this.tankSpeed).setAngle(0):(null==o?void 0:o.right.isDown)?null==(n=this.playerTank)||n.setPosition(this.playerTank.x+this.tankSpeed,this.playerTank.y).setAngle(-90):(null==o?void 0:o.left.isDown)?null==(i=this.playerTank)||i.setPosition(this.playerTank.x-this.tankSpeed,this.playerTank.y).setAngle(90):null==(r=this.playerTank)||r.setPosition(this.playerTank.x,this.playerTank.y).setAngle(this.playerTank.angle),((null==o?void 0:o.up.isDown)||(null==o?void 0:o.down.isDown)||(null==o?void 0:o.right.isDown)||(null==o?void 0:o.left.isDown))&&this.sendMovePlayerEvent({id:this.playerID,pX:this.playerTank.x,pY:this.playerTank.y,angle:this.playerTank.angle}),(null==o?void 0:o.space.isDown)&&e>this.lastFired){const t={id:crypto.randomUUID(),pX:this.playerTank.x,pY:this.playerTank.y,angle:0,vX:0,vY:0};-180===this.playerTank.angle?(t.pY-=35,t.angle=0,t.vX=0,t.vY=-300):0===this.playerTank.angle?(t.pY+=35,t.angle=-180,t.vX=0,t.vY=300):-90===this.playerTank.angle?(t.pX+=35,t.angle=90,t.vX=300,t.vY=0):90===this.playerTank.angle&&(t.pX-=35,t.angle=-90,t.vX=-300,t.vY=0),this.lastFired=e+300,this.addToBullets(t,"playerTankBullet"),this.sendShootEvent(t)}this.physics.overlap([...this.bullets.values()],[...this.players.values()],((e,t)=>{e instanceof Phaser.Physics.Arcade.Sprite&&(e.destroy(),this.sendBulletHitEvent({id:e.name,pX:e.x,pY:e.y,angle:e.angle,vX:0,vY:0})),t instanceof Phaser.Physics.Arcade.Sprite&&(t.destroy(),this.sendPlayerHitEvent({id:t.name,pX:t.x,pY:t.y,angle:t.angle}))}),void 0,this),this.bullets.forEach((e=>{e instanceof Phaser.Physics.Arcade.Sprite&&(e.x<0||e.x>this.sys.canvas.width||e.y<0||e.y>this.sys.canvas.height)&&e.destroy(!0)}),this),this.exitGamePlayOnEscPress()}}class p extends a.Scene{constructor(){super("MainMenu")}create(){this.add.text(10,10,"Main Menu").setFontSize(50).setPadding(10);const e=this.add.text(10,125,"Play").setFontSize(40).setBackgroundColor("#2d2d2d").setPadding(10).setInteractive();e.addListener("pointerover",(()=>{e.setBackgroundColor("#8d8d8d")})),e.addListener("pointerout",(()=>{e.setBackgroundColor("#2d2d2d")})),e.addListener("pointerdown",(()=>{this.scene.start("MainGame")}));const t=this.add.text(10,200,"Instructions").setFontSize(40).setBackgroundColor("#2d2d2d").setPadding(10).setInteractive();t.addListener("pointerover",(()=>{t.setBackgroundColor("#8d8d8d")})),t.addListener("pointerout",(()=>{t.setBackgroundColor("#2d2d2d")})),t.addListener("pointerdown",(()=>{this.scene.start("Instructions")}))}}class c extends a.Scene{constructor(){super("Instructions")}create(){this.add.text(10,10,"Instructions").setFontSize(50).setPadding(10),this.add.text(10,125,"- Press Up arrow key to Go Up\n- Press Down arrow key to Go Down\n- Press Left arrow key to Go Left\n- Press Right arrow key to Go Right\n- Press Spacebar to Shoot\n- Press Escape key to Exit the Game when playing").setFontSize(40).setWordWrapWidth(1e3);const e=this.add.text(10,475,"Back to Main Menu").setFontSize(40).setBackgroundColor("#2d2d2d").setPadding(10).setInteractive();e.addListener("pointerover",(()=>{e.setBackgroundColor("#8d8d8d")})),e.addListener("pointerout",(()=>{e.setBackgroundColor("#2d2d2d")})),e.addListener("pointerdown",(()=>{this.scene.start("MainMenu")}))}}class y extends a.Scene{constructor(){super("GameOver")}create(){this.add.text(10,10,"Game Over").setFontSize(50).setPadding(10);const e=this.add.text(10,125,"Back to Main Menu").setFontSize(40).setBackgroundColor("#2d2d2d").setPadding(10).setInteractive();e.addListener("pointerover",(()=>{e.setBackgroundColor("#8d8d8d")})),e.addListener("pointerout",(()=>{e.setBackgroundColor("#2d2d2d")})),e.addListener("pointerdown",(()=>{this.scene.start("MainMenu")}))}}class u extends a.Scene{constructor(){super("Boot")}async create(){if(!window.WebSocket)return void this.add.text(10,10,"Your browser does not support web socket").setFontSize(50).setPadding(10);let e=!1;try{const t=await fetch(document.location.origin+"/playable",{method:"GET"});if(!t.ok)throw new Error;e=(await t.json()).playable}catch(t){console.error(t.message)}e?this.scene.start("MainMenu"):this.add.text(10,10,"Maximum player connection reached").setFontSize(50).setPadding(10)}}const v={type:a.AUTO,width:1024,height:1024,parent:"game-container",backgroundColor:"#000",scale:{mode:a.Scale.FIT,autoCenter:a.Scale.CENTER_BOTH},scene:[u,p,c,h,y],physics:{default:"arcade"}};document.addEventListener("DOMContentLoaded",(()=>{new a.Game({...v,parent:"game-container"})}));
